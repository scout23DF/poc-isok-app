# version: '3'
version: '2.0'

# TO START THE DESIRED CONTAINERS:
# - PostgreSQL and Web SQL Clients Databases Only:
#    > clear && docker-compose start db-mysql-hybris db-mysql-cloudservices db-postgresql-pocs app-infra-phpmyadmin app-infra-pgadmin4
# - To start Only PhycusApp Database Services:
#    > clear && docker-compose up app-infra-db-mysql-phycusshfc app-infra-swagger-editor
#
# - To start the infra needed by KeyCloak Services:
#    > clear && docker-compose up app-infra-db-mysql-phycusshfc app-infra-db-mysql-keycloak app-infra-phpmyadmin app-infra-mailserver app-infra-swagger-editor
# - To start only Databases:
#    > clear && docker-compose up app-infra-keycloak

services:

    app-infra-db-postgresql-poc-01:  # port: 5432:5432
        image: kartoza/postgis:${POSTGRESQL_VERSION}
        container_name: app-infra-db-postgresql-poc-01
        environment:
            POSTGRES_DB: DBPoc-SpringOAuth2-Keycloak
            #  POSTGRES_DBNAME: DBPoc-SpringOAuth2-Keycloak
            POSTGRES_USER: dbamaster01
            POSTGRES_PASSWORD: 1a88a1
            POSTGRES_MULTIPLE_EXTENSIONS: "postgis,hstore,postgis_topology,postgis_raster,pgrouting,postgres_fdw"
            DEFAULT_ENCODING: "UTF-8"
            DEFAULT_COLLATION: "id_ID.utf8"
            DEFAULT_CTYPE: "en_US.UTF-8"
            RECREATE_DATADIR: "false"
            POSTGRES_TEMPLATE_EXTENSIONS: "true"
            IP_LIST: "*"
        ports:
            - "5432:5432"
        volumes:
            - vlmcfg-postgresql-srv-02-data:/var/lib/postgresql
        #    - ${SCRIPTS_POSTGRESQL_SRV_01_PATH}/01-init-dbs-schemas.sql:/docker-entrypoint-initdb.d/01-init-dbs-schemas.sql
        #    - ${SCRIPTS_POSTGRESQL_SRV_01_PATH}/00-create-users.sql:/docker-entrypoint-initdb.d/00-create-users.sql
        networks:
            - PoC-DevToolsEnv-Network


    app-infra-keycloak:
        image: jboss/keycloak:${KEYCLOAK_VERSION}
        container_name: app-infra-keycloak
        command:
          [
                  '-b',
                  '0.0.0.0',
                  '-Dkeycloak.migration.action=import',
                  '-Dkeycloak.migration.provider=dir',
                  '-Dkeycloak.migration.dir=/opt/jboss/keycloak/realm-config',
                  '-Dkeycloak.migration.strategy=OVERWRITE_EXISTING',
                  '-Djboss.socket.binding.port-offset=1000',
                  '-Dkeycloak.profile.feature.upload_scripts=enabled',
          ]
        volumes:
            - ./persistences-storages/keycloak/configs/realm-config:/opt/jboss/keycloak/realm-config
        environment:
            - DB_VENDOR=POSTGRES
            - DB_ADDR=app-infra-db-postgresql-poc-01
            - DB_DATABASE=DBPoc-SpringOAuth2-Keycloak
        #    - DB_SCHEMA=shm-keycloak
            - DB_USER=dbamaster01
            - DB_PASSWORD=1a88a1
            - KEYCLOAK_USER=admin
            - KEYCLOAK_PASSWORD=Pa55w0rd
            # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
            # - JDBC_PARAMS="useSSL=false;connectTimeout=30000;verifyServerCertificate=false;"
        ports:
            - 9080:9080
            - 9443:9443
            - 10990:10990
        depends_on:
            - app-infra-db-postgresql-poc-01
        links:
            - app-infra-db-postgresql-poc-01
        #  restart: 'always'
        networks:
            - PoC-DevToolsEnv-Network


    app-infra-pgadmin4: # port: 16543:80
        image: dpage/pgadmin4
        container_name: app-infra-pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: "dba-qq@pgadmin.com"
            PGADMIN_DEFAULT_PASSWORD: "1a88a1"
        ports:
            - "16543:80"
        depends_on:
            - app-infra-db-postgresql-poc-01
        networks:
            - PoC-DevToolsEnv-Network


    # app-infra-mailserver:
    #    image: tvial/docker-mailserver:latest
    #    hostname: fake-mailserver
    #    domainname: poc-soki.com
    #    container_name: app-infra-mailserver
    #    ports:
    #        - "25:25"
    #        - "143:143"
    #        - "465:465"
    #        - "587:587"
    #        - "993:993"
    #    volumes:
    #        #    - vlmcfg-maildata:/var/mail
    #        #    - vlmcfg-mailstate:/var/mail-state
    #        #    - vlmcfg-maillogs:/var/log/mail
    #        - ./persistences-storages/mail-server/data/:/var/mail
    #        - ./persistences-storages/mail-server/state/:/var/mail-state
    #        - ./persistences-storages/mail-server/logs/:/var/log/mail
    #        - ./persistences-storages/mail-server/configs/:/tmp/docker-mailserver/
    #    environment:
    #        - ENABLE_SPAMASSASSIN=1
    #        - ENABLE_CLAMAV=1
    #        - ENABLE_FAIL2BAN=1
    #        - ENABLE_POSTGREY=1
    #        - ONE_DIR=1
    #        - DMS_DEBUG=0
    #    cap_add:
    #        - NET_ADMIN
    #        - SYS_PTRACE
    #    networks:
    #        - PoC-DevToolsEnv-Network


# Networks configurations
networks:
    PoC-DevToolsEnv-Network:
        driver: bridge


# Volumes for persisting data, see https://docs.docker.com/engine/admin/volumes/volumes/
volumes:

    vlmcfg-postgresql-srv-02-data:
        driver_opts:
            type: none
            o: bind
            device: ${VOLUME_POSTGRESQL_SRV_02_DATA_PATH}

    vlmcfg-maildata:
        driver_opts:
            type: none
            o: bind
            device: ${VOLUME_MAILSERVER_DATA_PATH}

    vlmcfg-mailstate:
        driver_opts:
            type: none
            o: bind
            device: ${VOLUME_MAILSERVER_STATE_PATH}

    vlmcfg-maillogs:
        driver_opts:
            type: none
            o: bind
            device: ${VOLUME_MAILSERVER_LOGS_PATH}

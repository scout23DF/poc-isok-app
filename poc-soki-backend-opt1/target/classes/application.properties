server.port=8085
logging.level.org.springframework.security=DEBUG
logging.level.org.arun=DEBUG
logging.level.root=INFO

# PoC Security Properties
rest.security.enabled=true
rest.security.keycloak-host-url=http://localhost:9080
rest.security.target-keycloak-realm-name=PoC-Soki-Realm-01
rest.security.target-keycloak-client-real-id=5067ce51-37f0-46a5-bfa2-984543e80361
rest.security.target-keycloak-client-friendly-id=PoC-Soki-App-Client-01
rest.security.target-keycloak-client-secret=d90508dd-916f-4215-824b-6cd29f8ec49f
rest.security.target-keycloak-grant-type-for-user-auth=password
rest.security.target-keycloak-scope-for-user-auth=openid

rest.security.admin-keycloak-grant-type-for-refresh-token=refresh_token
rest.security.admin-keycloak-client-friendly-id=admin-cli
rest.security.admin-keycloak-system-account-username=manager01.from.app.proxy
rest.security.admin-keycloak-system-account-password=1a88a1


rest.security.issuer-uri=${rest.security.keycloak-host-url}/auth/realms/${rest.security.target-keycloak-realm-name}
rest.security.api-matcher=/api/sso/private/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600

# Spring Security OAuth2 Properties
security.oauth2.resource.id=PoC-Soki-App-Client-01
security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/userinfo
security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhhE0F0GgohF05H7SozxtLy/m8E3TNEJRtXmPddBO2PhAgBbPCe51p1Zay+oCmnA7nQ1aOSfEH8Lr/nv5ccGMNTMYNMnP4S6N3aKF0pujNtiyrrzlITU6pFEtuMLOFBjbeOMdbjLehPLismlTfC0nNdfChMxO6OZXh8+5YD3NlehQI6Kb+dM+kz9NhKnQ+rQppz9VSwQxg2Wukv8/RJdLaxymYUAlXalqmMy4MFXhb3x5aF0741AfUexzo/BFXY021ghdr28+/vxcJIlM6LOG3Fs5O7HkJlUmeOvFlMlArAgjSRFF04FqYo4AzxmAQ29j1ReZMBZOj6kHoXWU28biOwIDAQAB\n-----END PUBLIC KEY-----

#Required for micro services that needs to call another secured micro service call
security.oauth2.client.client-id=${rest.security.target-keycloak-client-friendly-id}
security.oauth2.client.client-secret=${rest.security.target-keycloak-client-secret}
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials


feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.client.config.default.loggerLevel=basic
feign.client.url.keycloak-host-url: ${rest.security.keycloak-host-url}